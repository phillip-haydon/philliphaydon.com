<rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title /><link>http://www.philliphaydon.com/feed.xml</link><description /><item><guid isPermaLink="true">http://www.philliphaydon.com/2016/05/07/postgresql-and-its-array-datatype/</guid><link>http://www.philliphaydon.com/2016/05/07/postgresql-and-its-array-datatype/</link><a10:author><a10:name /></a10:author><category>PostgreSQL</category><title>PostgreSQL and it's Array data type</title><description>&lt;p&gt;Switching between PostgreSQL and SQL Server, I've only ever really used the features of SQL Server in PostgreSQL. &lt;/p&gt;

&lt;p&gt;Lately after discovering Marten, I've been exploring features of PostgreSQL.&lt;/p&gt;

&lt;p&gt;Array data types, are the new awesome (today as of writing this, for me)&lt;/p&gt;

&lt;h2&gt;Defining the table&lt;/h2&gt;

&lt;p&gt;Using a really boring example, of a table, with an id, and an array of values.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;drop table if exists test_arrays;

create table test_arrays (
    id int,
    values int[]
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above you can see the values is declared as an array type by adding &lt;code&gt;[]&lt;/code&gt; to the end of &lt;code&gt;int&lt;/code&gt;, this declares it as an int array.&lt;/p&gt;

</description><pubDate>Fri, 06 May 2016 16:00:00 Z</pubDate><a10:updated>2016-05-06T16:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Switching between PostgreSQL and SQL Server, I've only ever really used the features of SQL Server in PostgreSQL. &lt;/p&gt;

&lt;p&gt;Lately after discovering Marten, I've been exploring features of PostgreSQL.&lt;/p&gt;

&lt;p&gt;Array data types, are the new awesome (today as of writing this, for me)&lt;/p&gt;

&lt;h2&gt;Defining the table&lt;/h2&gt;

&lt;p&gt;Using a really boring example, of a table, with an id, and an array of values.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;drop table if exists test_arrays;

create table test_arrays (
    id int,
    values int[]
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above you can see the values is declared as an array type by adding &lt;code&gt;[]&lt;/code&gt; to the end of &lt;code&gt;int&lt;/code&gt;, this declares it as an int array.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;PostgreSQL also supports multi-dimentional arrays by adding more square brackets to the end, for example we could define a multi dimentional array of &lt;code&gt;text&lt;/code&gt; values by declaring the column as &lt;code&gt;text[][]&lt;/code&gt; which would make it two dimentional.&lt;/p&gt;

&lt;p&gt;It also supports fixed size arrays, by passing an integer to the like &lt;code&gt;text[5]&lt;/code&gt;, this would make the array length of 5. &lt;/p&gt;

&lt;p&gt;I'm not going to discuss fixed length or multidimentional arrays in this post tho.&lt;/p&gt;

&lt;h2&gt;Inserting Data&lt;/h2&gt;

&lt;p&gt;Inserting data is a little strange...&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;insert into test_arrays (id, values) values (1, '{1, 5, 9}');
insert into test_arrays (id, values) values (2, '{2, 5, 20}');
insert into test_arrays (id, values) values (3, '{8, 6, 50}');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here I'm inserting 3 rows, as you can see the arrays are inserted by passing a string value that contains an array, wrapped in curly brackets. &lt;/p&gt;

&lt;p&gt;When inserting string values, they need to be wrapped in double quotes, for example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;'{"Banana", "Apple", "Watermelon"}'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This would be a value array of strings for use in &lt;code&gt;text[]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An alternative approach is to use the &lt;code&gt;array&lt;/code&gt; type passing in the values to the constructor like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;insert into test_arrays (id, values) values (4, array[12, 7, 3]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;insert into test_arrays (id, values) values (4, array["Banana", "Apple", "Watermelon"]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I prefer the string approach.&lt;/p&gt;

&lt;h2&gt;Filtering data&lt;/h2&gt;

&lt;p&gt;So there's probably 3 main scenarios I can think of when filtering an array.&lt;/p&gt;

&lt;p&gt;Given the data we inserted above&lt;/p&gt;

&lt;h4&gt;Does the array contain the value 5?&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;-- does the column contain 5?
select * from test_arrays where 5 = any(values);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This says, does the value of 5 equal any of the values in the array. It's a little strange when you write it the first time but it does make sense.&lt;/p&gt;

&lt;p&gt;This would result in rows 1 and 2 being returned.&lt;/p&gt;

&lt;h4&gt;Does the array contain atleast 1 of the values from another array?&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;-- does the column contain at-least one of
select * from test_arrays where values &amp;amp;&amp;amp; array[6, 9];
select * from test_arrays where values &amp;amp;&amp;amp; '{6, 9}'::int[];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This uses the &amp;amp;&amp;amp; operator which is 'overlap', in other words, does the (left) array contain any of the elements in the (right) array.&lt;/p&gt;

&lt;p&gt;This would result in rows 1 and 3 being returned.&lt;/p&gt;

&lt;p&gt;I wrote this using both ways of writing the array.&lt;/p&gt;

&lt;h4&gt;Does the array NOT contain any of the values from another array?&lt;/h4&gt;

&lt;p&gt;Very similar to the contains, only we specify it as &lt;code&gt;not&lt;/code&gt; before the condition.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-- does the column NOT contain at-least one of
select * from test_arrays where not values &amp;amp;&amp;amp; array[6, 9];
select * from test_arrays where not values &amp;amp;&amp;amp; '{6, 9}'::int[];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This would result in 1 row being returned.&lt;/p&gt;

&lt;h4&gt;Does the array contain all of the values from another array?&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;-- does the column contain all of
select * from test_arrays where values @&amp;gt; array[6, 9];
select * from test_arrays where values @&amp;gt; '{5, 9}'::int[];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This uses the contains operator, so we're saying, given the (left) array of values, does it contain all of the values in the (right) array values.&lt;/p&gt;

&lt;p&gt;This would result in row 1 being returned.&lt;/p&gt;

&lt;h2&gt;Returning data&lt;/h2&gt;

&lt;p&gt;If you're selecting out your array, it will be selected as the format that we inserted it as.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/postgresql-arrays-01.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;This makes parsing it a little hard. In C# you would get a string back, and have to strip off the &lt;code&gt;{ }&lt;/code&gt; and then split on &lt;code&gt;,&lt;/code&gt;. The good news is there are options to help you return the data a little nicer.&lt;/p&gt;

&lt;h4&gt;array_to_string to remove curly brackets&lt;/h4&gt;

&lt;p&gt;Using &lt;code&gt;array_to_string(...)&lt;/code&gt; function, we can return the results as a string without the brackets.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-- selecting the array as a string
select id, array_to_string(values, ',') from test_arrays;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will return the same result as above, without the &lt;code&gt;{ }&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/postgresql-arrays-02.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;There's also the opposite, &lt;code&gt;string_to_array&lt;/code&gt;, which will allow you to pass a string in and get an array back.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-- returning the array as a string
select string_to_array('9, 8, 7, 6', ',');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This would give you:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/postgresql-arrays-03.png" alt="" /&gt;&lt;/p&gt;

&lt;h4&gt;unnest to return an array as rows&lt;/h4&gt;

&lt;p&gt;This is so awesome, trying to do this in SQL Server is SUCH a pain. PostgreSQL supports &lt;code&gt;unnest&lt;/code&gt; which will return each value of an array, as a row, it will also duplicate all data from other rows to each row returned for the array.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-- return array column as rows
select id, unnest(values) from test_arrays
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This results in the following result:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/postgresql-arrays-04.png" alt="" /&gt;&lt;/p&gt;

&lt;h2&gt;Indexes &amp;amp; Doco&lt;/h2&gt;

&lt;p&gt;There's a lot of other stuff that I haven't included in this post. The type is Indexable, so you could apply a GIN index against the column for faster searching against &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;&amp;lt;@&lt;/code&gt; / &lt;code&gt;&amp;gt;@&lt;/code&gt; operators.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.postgresql.org/docs/9.5/static/gin-builtin-opclasses.html" title="http://www.postgresql.org/docs/9.5/static/gin-builtin-opclasses.html"&gt;http://www.postgresql.org/docs/9.5/static/gin-builtin-opclasses.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The PostgreSQL documentation is awesome. Check it out.  &lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.postgresql.org/docs/9.5/static/functions-array.html" title="http://www.postgresql.org/docs/9.5/static/functions-array.html"&gt;http://www.postgresql.org/docs/9.5/static/functions-array.html&lt;/a&gt;&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://www.philliphaydon.com/2016/01/03/using-aws-api-gateway-and-sqs-to-recieve-sendgrid-event-hooks/</guid><link>http://www.philliphaydon.com/2016/01/03/using-aws-api-gateway-and-sqs-to-recieve-sendgrid-event-hooks/</link><a10:author><a10:name /></a10:author><category>API Gateway</category><category>AWS</category><category>Event Hooks</category><category>Sendgrid</category><category>SQS</category><title>Using AWS's API Gateway to recieve Sendgrid event hooks and shove them in SQS</title><description>&lt;p&gt;Sendgrid hooks allow you to recieve notifications of events that occur to the emails that you send, such as, was the email clicked, was it bounced, was it unsubscribed, etc.&lt;/p&gt;

&lt;p&gt;A list of events can be found &lt;a href="http://www.philliphaydon.com/0"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When sendgrid send the events, they send an array of events, so it may not be ideal to process those as they come in, and rather just accept them and process them when you can. To do that you can use AWS's API Gateway to accept the request and push the JSON body to SQS. &lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Setting up the Queue&lt;/li&gt;
&lt;li&gt;Setting up the Policy&lt;/li&gt;
&lt;li&gt;Setting up the Role&lt;/li&gt;
&lt;li&gt;Creating the API Gateway&lt;/li&gt;
&lt;li&gt;Test with Console&lt;/li&gt;
&lt;li&gt;Test with Postman&lt;/li&gt;
&lt;/ol&gt;

</description><pubDate>Sat, 02 Jan 2016 16:00:00 Z</pubDate><a10:updated>2016-01-02T16:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Sendgrid hooks allow you to recieve notifications of events that occur to the emails that you send, such as, was the email clicked, was it bounced, was it unsubscribed, etc.&lt;/p&gt;

&lt;p&gt;A list of events can be found &lt;a href="http://www.philliphaydon.com/0"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When sendgrid send the events, they send an array of events, so it may not be ideal to process those as they come in, and rather just accept them and process them when you can. To do that you can use AWS's API Gateway to accept the request and push the JSON body to SQS. &lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Setting up the Queue&lt;/li&gt;
&lt;li&gt;Setting up the Policy&lt;/li&gt;
&lt;li&gt;Setting up the Role&lt;/li&gt;
&lt;li&gt;Creating the API Gateway&lt;/li&gt;
&lt;li&gt;Test with Console&lt;/li&gt;
&lt;li&gt;Test with Postman&lt;/li&gt;
&lt;/ol&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Setting up the Queue&lt;/h2&gt;

&lt;p&gt;First up we need to create a new Queue, so in the AWS Console navigate to the SQS Service, and click &lt;code&gt;Create New Queue&lt;/code&gt;. I'm calling my queue &lt;code&gt;SendgridEvents&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-01.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Once created, click on the queue and look at the details.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-02.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Make note of the ARN value, we need that in the policy.&lt;/p&gt;

&lt;h2&gt;Setting up a new Policy&lt;/h2&gt;

&lt;p&gt;Next head on over to the IAM Service and navigate to Policies. We want to create a new policy, select &lt;code&gt;Create Your Own Policy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Name the policy and add the following to the Policy Document:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Resource": [
                "arn:aws:sqs:us-west-2:1111222233334444:SendgridEvents"
            ],
            "Action": [
                "sqs:SendMessage"
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This says we want to allow the &lt;code&gt;sqsSendMessage&lt;/code&gt; only for the &lt;code&gt;SendgridEvents&lt;/code&gt; queue we just created. This means that the Role we create will not allowed to be do anything else. &lt;/p&gt;

&lt;p&gt;Note: the &lt;code&gt;1111222233334444&lt;/code&gt; value should be your account id that you will see in your own ARN, you don't need to change this value.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-03.png" alt="" /&gt;&lt;/p&gt;

&lt;h2&gt;Setting up a new Role&lt;/h2&gt;

&lt;p&gt;Staying in IAM, navigate to Roles and select &lt;code&gt;Create New Role&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Enter a Role Name&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-04.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Select from the &lt;code&gt;AWS Service Roles&lt;/code&gt; list, &lt;code&gt;Amazon EC2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-05.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;This should skip over the &lt;code&gt;Establish Trust&lt;/code&gt;, we can't navigate back to it, but we will fix that shortly.&lt;/p&gt;

&lt;p&gt;Attach your policy that you just created.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-06.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Your policy review should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-07.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Make note of the Role ARN, we need this for the API Gateway. &lt;/p&gt;

&lt;p&gt;Hit Create Role, and we're done... almost... &lt;/p&gt;

&lt;p&gt;Find your newly created role.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-08.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Click on it to select it, and then click on &lt;code&gt;Trust Relationships&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-09.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Change the &lt;code&gt;Service&lt;/code&gt; to &lt;code&gt;apigateway.amazonaws.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-10.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;And then hit Update Trust Policy. &lt;/p&gt;

&lt;p&gt;Now we have setup a Queue, a SendMessage Policy, and a Role for use on the API Gateway service. &lt;/p&gt;

&lt;h2&gt;Creating the API Gateway&lt;/h2&gt;

&lt;p&gt;Navigate to the API Gateway Service and click &lt;code&gt;Create API&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Give it a name and description&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-11.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Because this API's sole purpose is to only accept requests from Sendgrid, I wont create any resources. Just a method.&lt;/p&gt;

&lt;p&gt;Click &lt;code&gt;Create Method&lt;/code&gt;, and select &lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-12.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;In the setup we want to click &lt;code&gt;Show advanced&lt;/code&gt; in the Integration type list. This allows us to select &lt;code&gt;AWS Service Proxy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-14.png" alt="" /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Region: The region must match the region the queue was created in&lt;/li&gt;
&lt;li&gt;AWS Service: SQS&lt;/li&gt;
&lt;li&gt;HTTP method: Since we are accepting JSON we need a POST for large requests&lt;/li&gt;
&lt;li&gt;Action Type: Use path override
&lt;ul&gt;
&lt;li&gt;Path override: This is the last portion of the ARN we copied when creating the Queue. It should be your ID + Queue Name. i.e &lt;code&gt;1111222233334444:SendgridEvents&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Execution role: This it the Role ARN we just created&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click Save. Next we want to go to Integration Request.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-15.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Under HTTP Headers, add a new header for &lt;code&gt;Content-Type&lt;/code&gt; and set the value to &lt;code&gt;'application/x-www-form-urlencoded'&lt;/code&gt; (including the single quotes)&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-16.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;SQS only accepts two types of requests:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;GET: Where the values are passed via Query String&lt;/li&gt;
&lt;li&gt;POST: Where the values are passed as URL Encoded FORM Payload&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But Sendgrid sends us JSON, so we need to parse the JSON into a URL Encoded FORM payload. &lt;/p&gt;

&lt;p&gt;If you don't change the Content-Type, then SQS will reject the request because the Content-Type is incorrect.&lt;/p&gt;

&lt;p&gt;Hit the little Circle Tick on the right hand side to save (bad UI)&lt;/p&gt;

&lt;p&gt;Next we want to add a Mapping Template.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-17.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Set the Content Type to &lt;code&gt;application/json&lt;/code&gt; this is what we will map from. Since Sendgrid will send us a JSON request, we need to map from that to the url encoded payload.&lt;/p&gt;

&lt;p&gt;After adding it, click it to change the mapping from &lt;code&gt;Input Passthrough&lt;/code&gt; to &lt;code&gt;Mapping template&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set the template value to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Action=SendMessage&amp;amp;MessageBody=$util.urlEncode($util.escapeJavaScript($input.json('$')))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-18.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Broken up this is 2 keys:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Action: SendMessage, this matches the Policy we created, it's the action we want to take on the Queue.&lt;/li&gt;
&lt;li&gt;MessageBody: This it the JSON payload from Sendgrid that we escape so we can send it to SQS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Again we want to click that little Circle Tick icon to save.&lt;/p&gt;

&lt;h2&gt;Testing with the console&lt;/h2&gt;

&lt;p&gt;If you've followed along this far and understood everything, in theory it should all be configured correctly. So we will click &lt;code&gt;TEST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-19.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;On this screen, click &lt;code&gt;Request Body&lt;/code&gt; and enter in some valid JSON.&lt;/p&gt;

&lt;p&gt;Sendgrid actually give you a sample of what they will send so we can use that for testing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    "sg_message_id":"sendgrid_internal_message_id",
    "email": "john.doe@sendgrid.com",
    "timestamp": 1337966815,
    "event": "click",
    "url": "https://sendgrid.com",
    "userid": "1123",
    "template": "welcome"
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-20.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Hit Test and it should send that JSON off to SQS and return a 200 status back:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-21.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;BAM it's working :)&lt;/p&gt;

&lt;h2&gt;Testing with Postman&lt;/h2&gt;

&lt;p&gt;From the same screen you can click Deploy API&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-22.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;code&gt;New Stage&lt;/code&gt; and set a stage name. You can have many different stages for testing different things. We can create a test one for now and a production one later.&lt;/p&gt;

&lt;p&gt;Once it's deployed it will take you to a Stage Editor with an Invoke URL like so:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Invoke URL: https://&lt;em&gt;snipped&lt;/em&gt;.execute-api.us-west-2.amazonaws.com/testing&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Taking the URL, we can fire up Postman, and enter in the URL that Amazon gave us:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-23.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Set the &lt;code&gt;Content-Type&lt;/code&gt; to &lt;code&gt;application/json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-24.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Enter in the same JSON we entered for the Console test, and click &lt;code&gt;Send&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/sendgrid-api-25.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;And like the console, we get a result :)&lt;/p&gt;

&lt;p&gt;That's it!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://www.philliphaydon.com/2015/10/21/gzip-with-script-cs-in-octopus-deploy/</guid><link>http://www.philliphaydon.com/2015/10/21/gzip-with-script-cs-in-octopus-deploy/</link><a10:author><a10:name /></a10:author><category>Octopus Deploy</category><category>scriptcs</category><title>GZip with scriptcs in Octopus Deploy</title><description>&lt;p&gt;I had this crazy problem tonight. I wanted to upload all my assets for my website into AWS S3, but I needed to gzip them first before sending them.&lt;/p&gt;

&lt;p&gt;Usually I do this in Team City with Grunt, but all my variable replacement is done in Octopus Deploy depending on the environment. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Staging = S3 URLs&lt;/li&gt;
&lt;li&gt;Production = CloudFront URLs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the compression is done in Team City, variable replacement cannot happen on the GZipped file. &lt;/p&gt;

&lt;p&gt;I decided to move it to Octopus Deploy, my first thought was, could I run a node.js task in Octopus Deploy, the more I thought about it tho, I realised I don't want to install a dependency on node.js on the server.&lt;/p&gt;

&lt;p&gt;Second thought was to use Powershell... but I'm a real powershell no0b. &lt;/p&gt;

</description><pubDate>Tue, 20 Oct 2015 16:00:00 Z</pubDate><a10:updated>2015-10-20T16:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;I had this crazy problem tonight. I wanted to upload all my assets for my website into AWS S3, but I needed to gzip them first before sending them.&lt;/p&gt;

&lt;p&gt;Usually I do this in Team City with Grunt, but all my variable replacement is done in Octopus Deploy depending on the environment. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Staging = S3 URLs&lt;/li&gt;
&lt;li&gt;Production = CloudFront URLs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the compression is done in Team City, variable replacement cannot happen on the GZipped file. &lt;/p&gt;

&lt;p&gt;I decided to move it to Octopus Deploy, my first thought was, could I run a node.js task in Octopus Deploy, the more I thought about it tho, I realised I don't want to install a dependency on node.js on the server.&lt;/p&gt;

&lt;p&gt;Second thought was to use Powershell... but I'm a real powershell no0b. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;However! Octopus Deploy has this little button!&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/octopus-deploy-script-cs-01.png" alt="New Step in Octopus Deploy showing 'C#' option" /&gt;&lt;/p&gt;

&lt;p&gt;OMG I can write... C# code... in my deployment process. &lt;/p&gt;

&lt;p&gt;SO I set out to read about &lt;code&gt;System.IO.Compression&lt;/code&gt; on &lt;a href="http://www.philliphaydon.com/0"&gt;MSDN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Working from this I came up with the following script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;using System;
using System.IO;
using System.IO.Compression;

public static void Compress()
{
    var directory = Octopus.Parameters["Octopus.Action[Deploy Assets].Package.CustomInstallationDirectory"];

    Console.WriteLine("Trying to compress files in: " + directory);

    foreach (var fileToCompress in Directory.GetFiles(directory, "*.min.*", SearchOption.AllDirectories))
    {
        var fileInfo = new FileInfo(fileToCompress);

        if (!fileInfo.FullName.EndsWith(".min.js") &amp;amp;&amp;amp; !fileInfo.FullName.EndsWith(".min.css"))
        {
            continue;
        }

        var fileName = fileInfo.FullName.Replace(".min.js", "").Replace(".min.css", "") + ".gz" + fileInfo.Extension;

        using (FileStream originalFileStream = fileInfo.Open(FileMode.Open))
        using (FileStream compressedFileStream = File.Create(fileName))
        using (GZipStream compressionStream = new GZipStream(compressedFileStream, CompressionMode.Compress))
        {
            originalFileStream.CopyTo(compressionStream);

            Console.WriteLine("Compressed: " + fileInfo.FullName);
        }
    }
}

Compress();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have a build step called &lt;strong&gt;Deploy Assets&lt;/strong&gt; which has a bunch of sub steps. This has a package which stores all the CSS/Images/JavaScript files that have been generated in Team City.&lt;/p&gt;

&lt;p&gt;In here I update the URLs in all the files, and then run a Compress JS, and finally upload them all to S3. &lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/octopus-deploy-script-cs-02.png" alt="Octopus Deploy build steps" /&gt;&lt;/p&gt;

&lt;p&gt;Basically what this script does is iterates over all files in the deploy folder looking for anything that was already minified. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if (!fileInfo.FullName.EndsWith(".min.js") &amp;amp;&amp;amp; !fileInfo.FullName.EndsWith(".min.css"))
{
    continue;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If it's not a &lt;code&gt;.min.js&lt;/code&gt; or &lt;code&gt;.min.css&lt;/code&gt; file, then it's ignored.&lt;/p&gt;

&lt;p&gt;It then creates a new &lt;code&gt;fileName&lt;/code&gt; stripping off the existing extension and appending &lt;code&gt;.gz&lt;/code&gt; followed by the last extension of the file. &lt;/p&gt;

&lt;p&gt;e.g &lt;code&gt;main.min.css&lt;/code&gt; becomes &lt;code&gt;main.gz.css&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Then GZips the file and saves it.&lt;/p&gt;

&lt;p&gt;Here's an example of the &lt;code&gt;main.js&lt;/code&gt; file minified and compressed:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/octopus-deploy-script-cs-03.png" alt="Example compressed file" /&gt;&lt;/p&gt;

&lt;p&gt;And that's all there is to it. You can basically write any C# code you want. &lt;/p&gt;

&lt;p&gt;Please refer to &lt;a href="http://scriptcs.net/"&gt;scriptcs website&lt;/a&gt; for more information on how to load dependencies and such.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://www.philliphaydon.com/2014/08/16/permament-redirect-to-https-with-iis/</guid><link>http://www.philliphaydon.com/2014/08/16/permament-redirect-to-https-with-iis/</link><a10:author><a10:name /></a10:author><category>HTTPS</category><category>IIS</category><category>Nancy</category><title>Permament redirect to HTTPS with IIS</title><description>&lt;p&gt;Google has just recently updated their search results to give higher ranking to sites with an SSL Certificate, than to sites without, which is one of the best changes Google has made in recent years. There really is no excuse for not having a cert now. &lt;em&gt;(note, this is limited to small portion of sites but lets assume that this will be rolled out if Google proves it to be worth while)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://googleonlinesecurity.blogspot.co.uk/2014/08/https-as-ranking-signal_6.html"&gt;googleonlinesecurity - https-as-ranking-signal_6.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortuntely for me it seems Github Pages does not support Certificates on custom domain names, yet... :( hopefully they will support this eventually so that I can avoid moving my blog.&lt;/p&gt;

&lt;p&gt;So one thing that pops up in the Nancy channel on JabbR every-now-n-then, is how to make all modules require SSL. &lt;/p&gt;

&lt;p&gt;From within a module you can call:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this.RequiresHttps()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And this will push the site into &lt;code&gt;https&lt;/code&gt;, but having to write this everywhere is rather annoying, and during development on your local machine this is a bit of a hassle. Despite Visual Studio supporting an HTTPS url...&lt;/p&gt;

</description><pubDate>Fri, 15 Aug 2014 16:00:00 Z</pubDate><a10:updated>2014-08-15T16:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Google has just recently updated their search results to give higher ranking to sites with an SSL Certificate, than to sites without, which is one of the best changes Google has made in recent years. There really is no excuse for not having a cert now. &lt;em&gt;(note, this is limited to small portion of sites but lets assume that this will be rolled out if Google proves it to be worth while)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://googleonlinesecurity.blogspot.co.uk/2014/08/https-as-ranking-signal_6.html"&gt;googleonlinesecurity - https-as-ranking-signal_6.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortuntely for me it seems Github Pages does not support Certificates on custom domain names, yet... :( hopefully they will support this eventually so that I can avoid moving my blog.&lt;/p&gt;

&lt;p&gt;So one thing that pops up in the Nancy channel on JabbR every-now-n-then, is how to make all modules require SSL. &lt;/p&gt;

&lt;p&gt;From within a module you can call:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this.RequiresHttps()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And this will push the site into &lt;code&gt;https&lt;/code&gt;, but having to write this everywhere is rather annoying, and during development on your local machine this is a bit of a hassle. Despite Visual Studio supporting an HTTPS url...&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/https-iis-vs-01.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;If you didn't know this existed, you should. Basically in Visual Studio, select your Web Application project, then open up the properties window (don't right click and select properties, you need to open the window manually) in the window, set &lt;code&gt;SSL Enabled&lt;/code&gt; to true, this will add a SSL URL, then you can run the site and use that url instead of the non-https url.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;So during development you may want to develop without a certificate, but want your production site to be always using a certificate, this makes the &lt;code&gt;RequiresHttps()&lt;/code&gt; call a little annoying, we end up with conditional logic or something similar to figure out are we in development, or are we in production.&lt;/p&gt;

&lt;h2&gt;URL Rewite Extension for IIS&lt;/h2&gt;

&lt;p&gt;Download and install the &lt;a href="http://www.iis.net/downloads/microsoft/url-rewrite"&gt;URL Rewrite extension&lt;/a&gt; for IIS. Once installed we can do lots of fancy stuff for URL Rewriting, but we only want to handle the HTTPS redirect for this post.&lt;/p&gt;

&lt;p&gt;Now that it's installed, we can configure it one of two ways. If we use the GUI then we still need to copy the contents generated in the Web.config file and put that into a build script.&lt;/p&gt;

&lt;p&gt;Using the GUI, we can open up the URL Rewrite extension:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/https-iis-vs-02.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Using the GUI we can setup a new &lt;code&gt;Blank rule&lt;/code&gt; in the &lt;code&gt;Inbound rules&lt;/code&gt; section:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/https-iis-vs-03.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Next we want to fill in the rule. &lt;/p&gt;

&lt;p&gt;For the Match URL, we want to use a super duper simple regular expression.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This basically says, match any character, as many times as you want.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/https-iis-vs-04.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;For the Conditions, we want to check the Input &lt;code&gt;{HTTPS}&lt;/code&gt; match is off, if we have it on then we will end up in an infinate loop. eek&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/https-iis-vs-05.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;We don't care about Server Variables so skip that.&lt;/p&gt;

&lt;p&gt;And lastly is the action we want to take when the rule matches (that it's not an HTTPS request)&lt;/p&gt;

&lt;p&gt;We want to Redirect to:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://{HTTP_HOST}/{R:0}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Tick append query string, and for the redirect type, select Permanment. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;{HTTP_HOST}&lt;/code&gt; is the host name, so if your domain is &lt;code&gt;bananasareyellow.com&lt;/code&gt; then that's the value that will be put in the redirect url. You can hard code this value if you want, but if you want to support multiple host names then you will want to use the variable. &lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/https-iis-vs-06.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;After applying this new rule, when you visit your website with an HTTP url, it will be pushed into HTTPS. &lt;/p&gt;

&lt;h2&gt;Ahhh I've lost it!&lt;/h2&gt;

&lt;p&gt;All this information gets stored in your web.config file, and it looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;system.webServer&amp;gt;
    &amp;lt;rewrite&amp;gt;
        &amp;lt;rules&amp;gt;
            &amp;lt;rule name="HTTP to HTTPS redirect" stopProcessing="true"&amp;gt;
                &amp;lt;match url=".*" /&amp;gt;
                &amp;lt;conditions&amp;gt;
                    &amp;lt;add input="{HTTPS}" pattern="OFF" /&amp;gt;
                &amp;lt;/conditions&amp;gt;
                &amp;lt;action type="Redirect" url="https://{HTTP_HOST}/{R:0}" redirectType="Permanent" /&amp;gt;
            &amp;lt;/rule&amp;gt;
        &amp;lt;/rules&amp;gt;
    &amp;lt;/rewrite&amp;gt;
&amp;lt;/system.webServer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SO! &lt;/p&gt;

&lt;p&gt;Once you've written up your condition, you may want to roll this into your build script so that during development, that way when it's deployed it will always contain the rule and you wont lose it. &lt;/p&gt;

&lt;p&gt;You can also add a condition in here to say the rule does not apply when the site is a localhost or test domain, but in my opinion you shouldn't add test-checks in production code.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://www.philliphaydon.com/2014/06/09/taking-snapshots-of-a-video-and-displaying-it/</guid><link>http://www.philliphaydon.com/2014/06/09/taking-snapshots-of-a-video-and-displaying-it/</link><a10:author><a10:name /></a10:author><category>HTML5</category><category>JavaScript</category><title>Taking snap shots of a Video &amp; displaying it</title><description>&lt;p&gt;Now we've loaded an image/video, we've captured the drop event, we've displayed it...&lt;/p&gt;

&lt;p&gt;But what about taking screen grabs of a video?&lt;/p&gt;

&lt;p&gt;To start with I'll go back to the code we used in Part 1, so we have an input, a load button, and a video control:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="utf-8" /&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;      
    &amp;lt;div&amp;gt;
        &amp;lt;input type="file" id="video-input"&amp;gt;
        &amp;lt;input type="button" value="Load Selected Video" id="load-video" /&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div&amp;gt;
        &amp;lt;video id="video-container" controls&amp;gt;&amp;lt;/video&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Racing ahead we load that up:&lt;/p&gt;

</description><pubDate>Sun, 08 Jun 2014 16:00:00 Z</pubDate><a10:updated>2014-06-08T16:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Now we've loaded an image/video, we've captured the drop event, we've displayed it...&lt;/p&gt;

&lt;p&gt;But what about taking screen grabs of a video?&lt;/p&gt;

&lt;p&gt;To start with I'll go back to the code we used in Part 1, so we have an input, a load button, and a video control:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="utf-8" /&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;      
    &amp;lt;div&amp;gt;
        &amp;lt;input type="file" id="video-input"&amp;gt;
        &amp;lt;input type="button" value="Load Selected Video" id="load-video" /&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div&amp;gt;
        &amp;lt;video id="video-container" controls&amp;gt;&amp;lt;/video&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Racing ahead we load that up:&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;    
    (function(){

        var fileInput = document.getElementById('video-input');
        var video = document.getElementById('video-container');

        document.getElementById('load-video').addEventListener('click', function(){
            var fileUrl = window.URL.createObjectURL(fileInput.files[0]);

            video.src = fileUrl;            
        });

    })();   
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have loaded our video, how do we capture screen grabs?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/strong&gt; All sizes are halved becaused the test video is too large :)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;The hidden canvas&lt;/h2&gt;

&lt;p&gt;The first thing we have to do is get the current data of the current frame being displayed. To do that we need to create a hidden canvas, and then draw onto it. &lt;/p&gt;

&lt;p&gt;So we're gonna add a canvas element to the UI:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;canvas id="temp-canvas" style="display:none"&amp;gt;&amp;lt;/canvas&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The canvas doesn't need to display, it's simply there to capture data. Now we need to put the video into it, so lets add a button, lets also add somewhere to display the image once we have it. :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;input type="button" value="Copy current frame to image below" id="load-image" /&amp;gt;

&amp;lt;br /&amp;gt;Image......&amp;lt;br /&amp;gt;
&amp;lt;img id="image-container" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;The fluff in between...&lt;/h2&gt;

&lt;p&gt;Now we need to add some fluff when the button to copy the current frame is clicked.&lt;/p&gt;

&lt;p&gt;Let's find the controls:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var image = document.getElementById('image-container');
var canvas = document.getElementById('temp-canvas');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And add a click event to the new button:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;document.getElementById('load-image').addEventListener('click', function(){

});
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Load that image!&lt;/h2&gt;

&lt;p&gt;What we need to do now is take the dom video control, as is. &lt;em&gt;(this means if you're using jQuery to find the element, you need to get the real dom element, not the jQuery wrapped element)&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;This is currently our &lt;code&gt;video&lt;/code&gt; variable. &lt;/p&gt;

&lt;p&gt;First up we will size our canvas:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;canvas.height = video.videoHeight / 2;
canvas.width = video.videoWidth / 2;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we need to create a context on our canvas. We will create a 2d context like do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var context = canvas.getContext("2d");
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This gives us a 2d rendering context whih we can use to draw on. We will draw the current video frame. Assuming we have pause the video in the middle somewhere, we can hit the button to capture the current frame by padding the video in like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight, 0, 0, canvas.width, canvas.height);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;// NOTE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For this I used the 9 property &lt;code&gt;drawImage&lt;/code&gt; function, this is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;drawImage(source, sourceStartX, sourceStartY, width, height, destinationStartX, destinationStartY, width, height) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This means, the sourceStart is where you want the first pixel to be captured from, the width/height of the source from the start pixels. &lt;/p&gt;

&lt;p&gt;The destinationStart is where you want to place the image on the canvas and how you want it to stretch.&lt;/p&gt;

&lt;p&gt;My sample takes the actual height/width of the source and places it in the smaller canvas.&lt;/p&gt;

&lt;p&gt;You can also use&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which will assume the same height/width for source/canvas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;// END NOTE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now all that's left is to display it, to do this we call the &lt;code&gt;toDataURL()&lt;/code&gt; function defined on the canvas. This takes what's currently drawn and shows it in a image element.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;image.src = canvas.toDataURL();     
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Why do we do this rather than display the canvas itself? Well this allows you to right click the image and download it. :)&lt;/p&gt;

&lt;p&gt;Now we can load a video:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/screen-capture-video-html5-01.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;And then press the button to capture it!!!!&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/screen-capture-video-html5-02.png" alt="" /&gt;&lt;/p&gt;

&lt;h2&gt;The final codez&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;input type="file" id="video-input"&amp;gt;
    &amp;lt;input type="button" value="Load Selected Video" id="load-video" /&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div&amp;gt;
    &amp;lt;br /&amp;gt;Video...&amp;lt;br /&amp;gt;
    &amp;lt;video id="video-container" controls&amp;gt;&amp;lt;/video&amp;gt;

    &amp;lt;br /&amp;gt;
    &amp;lt;input type="button" value="Copy current frame to image below" id="load-image" /&amp;gt;

    &amp;lt;br /&amp;gt;Image......&amp;lt;br /&amp;gt;
    &amp;lt;img id="image-container" /&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;canvas id="temp-canvas" style="display:none"&amp;gt;&amp;lt;/canvas&amp;gt;

&amp;lt;script&amp;gt;
    (function(){

        var fileInput = document.getElementById('video-input');
        var video = document.getElementById('video-container');
        var image = document.getElementById('image-container');
        var canvas = document.getElementById('temp-canvas');

        document.getElementById('load-video').addEventListener('click', function(){
            var fileUrl = window.URL.createObjectURL(fileInput.files[0]);

            video.src = fileUrl;            
        });
        document.getElementById('load-image').addEventListener('click', function(){

            canvas.height = video.videoHeight;
            canvas.width = video.videoWidth;

            var context = canvas.getContext("2d");

            drawImage(source, sourceStartX, sourceStartY, width, height, destinationStartX, destinationStartY, width, height) 

            image.src = canvas.toDataURL();         
        });

    })();

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;What do we have...&lt;/h2&gt;

&lt;p&gt;So we've got an file &lt;code&gt;input&lt;/code&gt; control, it loads a video file into a &lt;code&gt;video&lt;/code&gt; element, then we scrub the video &amp;amp; hit that button, and bam, we capture what ever the current frame is.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://www.philliphaydon.com/2014/05/03/managing-your-azure-storage-account-with-zudio/</guid><link>http://www.philliphaydon.com/2014/05/03/managing-your-azure-storage-account-with-zudio/</link><a10:author><a10:name /></a10:author><category>Azure</category><title>Managing your Azure Storage account with Zudio</title><description>&lt;p&gt;Messing around with Azure Queues, using the C# library to create a queue, add messages, read them, delete them... all is well and good...&lt;/p&gt;

&lt;p&gt;But at some point I wanted to view what I was putting into the queue...&lt;/p&gt;

&lt;p&gt;The Azure blog has a recent post listing a few &lt;a href="http://blogs.msdn.com/b/windowsazurestorage/archive/2014/03/11/windows-azure-storage-explorers-2014.aspx"&gt;Azure Storage explorers&lt;/a&gt;. I tried a couple of them, but they were so buggy!&lt;/p&gt;

&lt;p&gt;Infact, I'm sorry to say... Azure Storage Explorer was the worst. When I attempted to refresh a queue, nothing happened. I had to add a second queue, then swap between each queue in order to review the list. Most of the buttons don't seem to do anything at all.&lt;/p&gt;

&lt;p&gt;Then I remember &lt;a href="http://twitter.com/markrendle"&gt;Mark Rendle&lt;/a&gt; tweeted me about his &lt;a href="http://zud.io/"&gt;Zudio&lt;/a&gt; site. Funnily enough he got a mention on the blog post. I decided to login and check it out again.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://zud.io/"&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-02.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;

</description><pubDate>Fri, 02 May 2014 18:21:42 Z</pubDate><a10:updated>2014-05-02T18:21:42Z</a10:updated><a10:content type="html">&lt;p&gt;Messing around with Azure Queues, using the C# library to create a queue, add messages, read them, delete them... all is well and good...&lt;/p&gt;

&lt;p&gt;But at some point I wanted to view what I was putting into the queue...&lt;/p&gt;

&lt;p&gt;The Azure blog has a recent post listing a few &lt;a href="http://blogs.msdn.com/b/windowsazurestorage/archive/2014/03/11/windows-azure-storage-explorers-2014.aspx"&gt;Azure Storage explorers&lt;/a&gt;. I tried a couple of them, but they were so buggy!&lt;/p&gt;

&lt;p&gt;Infact, I'm sorry to say... Azure Storage Explorer was the worst. When I attempted to refresh a queue, nothing happened. I had to add a second queue, then swap between each queue in order to review the list. Most of the buttons don't seem to do anything at all.&lt;/p&gt;

&lt;p&gt;Then I remember &lt;a href="http://twitter.com/markrendle"&gt;Mark Rendle&lt;/a&gt; tweeted me about his &lt;a href="http://zud.io/"&gt;Zudio&lt;/a&gt; site. Funnily enough he got a mention on the blog post. I decided to login and check it out again.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://zud.io/"&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-02.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Using zudio&lt;/h2&gt;

&lt;p&gt;Assuming you've already setup a Storage Account on Azure, we can login to zudio, where you will be presented with the following:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-01.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Clicking on the Add a Storage Account button prompts us to add an account: &lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-03.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;We can get the Account Name and Location looking at the Storage List in Azure&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-04.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Then the Shared Key can be found by clicking the Manage Access Keys link in the same page as the Store Accounts list:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-05.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Selecting one of the Access Keys and pasting it into the Shared Key in Zudio.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-06.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Once we have added the account we should have the account name appear in the list on Zudio&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-07.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Click the account name and we should get a list of options, we can choose what we want to manage, Blobs, Queues, or Tables. Lets pick Queues.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-08.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;We should get a list of queues, my list is empty since I haven't added any yet...&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-09.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;We could manage the queues from this screen using the available options:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-10.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;But lets add some code :)&lt;/p&gt;

&lt;h2&gt;Codez - because we need some :)&lt;/h2&gt;

&lt;p&gt;In a basic console app, I've added the &lt;a href="http://www.nuget.org/packages/WindowsAzure.Storage/"&gt;WindowsAzure.Storage&lt;/a&gt; nuget, and written some simple code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var storageConnection = @"DefaultEndpointsProtocol=https;AccountName=phzudio;AccountKey=*REMOVED*";
var storageAccount = CloudStorageAccount.Parse(storageConnection);

var queueClient = storageAccount.CreateCloudQueueClient();
var queue = queueClient.GetQueueReference("my-first-queue");

queue.CreateIfNotExists();

queue.AddMessage(new CloudQueueMessage("Hello, World"));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's it... simple simple code. The account key removed in the &lt;code&gt;storageConnection&lt;/code&gt; is the same key we used to connect to Zudio.&lt;/p&gt;

&lt;p&gt;Now when we run the code, and jump back to Zudio, hit refresh...&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-11.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;We get our newly created queue from code.&lt;/p&gt;

&lt;p&gt;Clicking on the queue shows us our message&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-12.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;From here we can manage messages &lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/zudio-post-13.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Adding new messages, refreshing, dequeuing, etc.&lt;/p&gt;

&lt;h2&gt;Summary&lt;/h2&gt;

&lt;p&gt;Zudio is super simple to use and pretty damn powerful for managing Azure Storage, Mark has done an awesome job and I look forward to using Zudio in the future. &lt;/p&gt;

&lt;p&gt;So far I'm only used it for queues, and clicked around on the tables/blobs, but its so easy to use and intuitive! &lt;/p&gt;

&lt;p&gt;I would highly recommend checking out Zudio!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://zud.io"&gt;http://zud.io&lt;/a&gt;&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://www.philliphaydon.com/2014/05/01/creating-a-drop-area-top-drop-a-file-in-html5/</guid><link>http://www.philliphaydon.com/2014/05/01/creating-a-drop-area-top-drop-a-file-in-html5/</link><a10:author><a10:name /></a10:author><category>HTML5</category><category>JavaScript</category><title>Creating a drop area to drop a file in HTML 5</title><description>&lt;p&gt;In the first post we uploaded a file and viewed it in the browser without sending it to a server, now we are going to create a drop area so that you can drag a file from a folder, into the website.&lt;/p&gt;

&lt;p&gt;Using the same HTML as before, lets add a drop area:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;input type="file" id="image-input"&amp;gt;
    &amp;lt;input type="button" value="Load Selected Image" id="load-image" /&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div id="drop-area"&amp;gt;
    Drop File Here...
&amp;lt;/div&amp;gt;

&amp;lt;div&amp;gt;
    &amp;lt;img id="image-container" width="360" /&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And add a bit of CSS to make it a little more visible:&lt;/p&gt;

</description><pubDate>Wed, 30 Apr 2014 16:00:00 Z</pubDate><a10:updated>2014-04-30T16:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;In the first post we uploaded a file and viewed it in the browser without sending it to a server, now we are going to create a drop area so that you can drag a file from a folder, into the website.&lt;/p&gt;

&lt;p&gt;Using the same HTML as before, lets add a drop area:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;input type="file" id="image-input"&amp;gt;
    &amp;lt;input type="button" value="Load Selected Image" id="load-image" /&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div id="drop-area"&amp;gt;
    Drop File Here...
&amp;lt;/div&amp;gt;

&amp;lt;div&amp;gt;
    &amp;lt;img id="image-container" width="360" /&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And add a bit of CSS to make it a little more visible:&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;style type="text/css"&amp;gt;
#drop-area{
    border: 1px dotted #666;
    background: #f2f2f2;
    width: 360px;
    height: 50px;
    vertical-align: middle;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
}

#drop-area.drop {
    background: red;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If we view it now it should look like:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/drag-drop-image-html5-01.png" alt="" /&gt;&lt;/p&gt;

&lt;h2&gt;Drag Enter&lt;/h2&gt;

&lt;p&gt;Now we have our UI set, we need to add an indication when the user drags a file...&lt;/p&gt;

&lt;p&gt;If we don't, it would look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/drag-drop-image-html5-02.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Which isn't very helpful, so first we need to attach some events for &lt;code&gt;dragenter&lt;/code&gt; and &lt;code&gt;dragleave&lt;/code&gt; so we can add/remove the class.&lt;/p&gt;

&lt;p&gt;We use this instead of &lt;code&gt;:hover&lt;/code&gt; because we only want the visual effect when the user is dragging something into the droppable area.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var dropArea = document.getElementById('drop-area');

dropArea.addEventListener('dragenter', function(e){
    e.currentTarget.classList.add('drop');
});

dropArea.addEventListener('dragleave', function(e){
    e.currentTarget.classList.remove('drop');
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now when we drag the a file over the drop area, we end with...&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/drag-drop-image-html5-03.png" alt="" /&gt;&lt;/p&gt;

&lt;h2&gt;The hidden 'Copy'...&lt;/h2&gt;

&lt;p&gt;It took me a while to figure out why my code didn't work and it happens to be the bit people put in the sample code and never explain...&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dropArea.addEventListener('dragover', function(e){
    e.preventDefault();
    e.stopPropagation();
    e.dataTransfer.dropEffect = 'copy';
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In order for the drag to be captured, we need to set the &lt;code&gt;dropEffect&lt;/code&gt;, by setting it to &lt;code&gt;copy&lt;/code&gt;, apparently allows the source item (the item we're dragging) will be copied to the drop location.&lt;/p&gt;

&lt;p&gt;The possible values on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer#dropEffect.28.29"&gt;W3&lt;/a&gt; and &lt;a href="http://www.w3.org/TR/2011/WD-html5-20110113/dnd.html#dom-datatransfer-dropeffect"&gt;MDN&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;copy:&lt;/strong&gt; A copy of the source item is made at the new location.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;move:&lt;/strong&gt; An item is moved to a new location.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;link:&lt;/strong&gt; A link is established to the source at the new location.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;none:&lt;/strong&gt; The item may not be dropped.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Setting this value on &lt;code&gt;dragenter&lt;/code&gt; doesn't seem to do anything, it only works when doing it on &lt;code&gt;dragover&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Lets capture it and render it!!!&lt;/h2&gt;

&lt;p&gt;All that's left now is to touch the &lt;code&gt;drop&lt;/code&gt; event...&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dropArea.addEventListener('drop', function(e){
    e.preventDefault();
    e.stopPropagation();

    var file = e.dataTransfer.files[0];
    var fileUrl = window.URL.createObjectURL(file);

    image.src = fileUrl;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Like when we load the file from an &lt;code&gt;input&lt;/code&gt; control, we get a collection of files. Since we're only dragging 1 file for testing, we just grab the first file, create a URL, and load it...&lt;/p&gt;

&lt;p&gt;Now when we drop out cat picture!&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/drag-drop-image-html5-04.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;BAM Now we have Pizza Cat! :)&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://www.philliphaydon.com/2014/04/29/loading-an-image-or-video-from-a-file-input-control/</guid><link>http://www.philliphaydon.com/2014/04/29/loading-an-image-or-video-from-a-file-input-control/</link><a10:author><a10:name /></a10:author><category>HTML5</category><category>JavaScript</category><title>Loading an Image or Video from a File Input control.</title><description>&lt;p&gt;So you've got an input control, and you want to display the video/image before the user uploads, maybe so they can verify it first...&lt;/p&gt;

&lt;p&gt;The &lt;a href="http://dev.w3.org/2006/webapi/FileAPI/"&gt;File API&lt;/a&gt; allows you to get more information from a &lt;code&gt;&amp;lt;input type="file"...&lt;/code&gt; control than we could get before. &lt;/p&gt;

&lt;p&gt;So lets start with Video:&lt;/p&gt;

&lt;h2&gt;Video&lt;/h2&gt;

&lt;p&gt;Ok so we have a basic HTML page with an &lt;code&gt;&amp;lt;input type="file"...&lt;/code&gt;, &lt;code&gt;&amp;lt;video...&lt;/code&gt;, and &lt;code&gt;&amp;lt;input type="button'...&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="utf-8" /&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;      
    &amp;lt;div&amp;gt;
        &amp;lt;input type="file" id="video-input"&amp;gt;
        &amp;lt;input type="button" value="Load Selected Video" id="load-video" /&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div&amp;gt;
        &amp;lt;video id="video-container" controls&amp;gt;&amp;lt;/video&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So if we load up a file, our UI should look something like this:&lt;/p&gt;

</description><pubDate>Mon, 28 Apr 2014 16:00:00 Z</pubDate><a10:updated>2014-04-28T16:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;So you've got an input control, and you want to display the video/image before the user uploads, maybe so they can verify it first...&lt;/p&gt;

&lt;p&gt;The &lt;a href="http://dev.w3.org/2006/webapi/FileAPI/"&gt;File API&lt;/a&gt; allows you to get more information from a &lt;code&gt;&amp;lt;input type="file"...&lt;/code&gt; control than we could get before. &lt;/p&gt;

&lt;p&gt;So lets start with Video:&lt;/p&gt;

&lt;h2&gt;Video&lt;/h2&gt;

&lt;p&gt;Ok so we have a basic HTML page with an &lt;code&gt;&amp;lt;input type="file"...&lt;/code&gt;, &lt;code&gt;&amp;lt;video...&lt;/code&gt;, and &lt;code&gt;&amp;lt;input type="button'...&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="utf-8" /&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;      
    &amp;lt;div&amp;gt;
        &amp;lt;input type="file" id="video-input"&amp;gt;
        &amp;lt;input type="button" value="Load Selected Video" id="load-video" /&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div&amp;gt;
        &amp;lt;video id="video-container" controls&amp;gt;&amp;lt;/video&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So if we load up a file, our UI should look something like this:&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/image-video-part-1-01.png" alt="" /&gt;  &lt;/p&gt;

&lt;p&gt;Now we need to add a click event to the button:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;    
    (function(){

        var fileInput = document.getElementById('video-input');
        var video = document.getElementById('video-container');

        document.getElementById('load-video').addEventListener('click', function(){

            // Hmmm what happens?!?

        });

    })();   
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is currently only 3 video types that most browsers can handle. &lt;em&gt;There are others but support is far and few, for now atleast&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;video/mp4&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;video/ogg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;video/webm&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;video/mp4&lt;/code&gt; is supported on all browsers except Opera. (tho I haven't tested) so I'll only use a &lt;code&gt;.mp4&lt;/code&gt; file.&lt;/p&gt;

&lt;h2&gt;How to load the selected file into a &lt;code&gt;&amp;lt;video /&amp;gt;&lt;/code&gt; element&lt;/h2&gt;

&lt;p&gt;Ok so we have selected a file, but how do we load it? The W3 Spec has a section on Blob URL for &lt;a href="http://www.w3.org/TR/FileAPI/#creating-revoking"&gt;Creating/Revoking&lt;/a&gt;, all we need to do is creat a URL for the file blob, we can do this by calling:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var fileUrl = window.URL.createObjectURL(fileInput.files[0]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can assign this to the &lt;code&gt;&amp;lt;video...&lt;/code&gt; element:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;document.getElementById('load-video').addEventListener('click', function(){

    var fileUrl = window.URL.createObjectURL(fileInput.files[0]);

    video.src = fileUrl;

});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can select the file:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/image-video-part-1-02.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Can see the file selected next to the file input&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And if we click on &lt;code&gt;Load Selected Video&lt;/code&gt; we get:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/image-video-part-1-03.png" alt="" /&gt;  &lt;/p&gt;

&lt;h2&gt;What's it doing?!?&lt;/h2&gt;

&lt;p&gt;What the browser does is creates a fake URL with the blob loaded into it to simulate a URL for the content, if we put a break point on the button click:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/image-video-part-1-04.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;We can see a URL prefixed with &lt;code&gt;blob&lt;/code&gt; and a url. So this allows the browser to simulate making a request for the content as if it was being served up normally...&lt;/p&gt;

&lt;h2&gt;Images!&lt;/h2&gt;

&lt;p&gt;So the great thing about this is it works for images too!!! So if we change the HTML now to have an &lt;code&gt;&amp;lt;img...&lt;/code&gt; tag instead of &lt;code&gt;&amp;lt;video...&lt;/code&gt; tag:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;input type="file" id="image-input"&amp;gt;
    &amp;lt;input type="button" value="Load Selected Image" id="load-image" /&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div&amp;gt;
    &amp;lt;img id="image-container" /&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And we update the JavaScript (just the wording so its all &lt;code&gt;image&lt;/code&gt; instead of &lt;code&gt;video&lt;/code&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(function(){

    var fileInput = document.getElementById('image-input');
    var image = document.getElementById('image-container');

    document.getElementById('load-image').addEventListener('click', function(){

        var fileUrl = window.URL.createObjectURL(fileInput.files[0]);

        image.src = fileUrl;

    });

})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can achieve the same thing with images, selecting a file:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/image-video-part-1-05.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;And we hit load:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/image-video-part-1-06.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;And if we debug it, just like the video, it creates a URL we can use for the image:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/image-video-part-1-07.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;That's how easy it is :) Next we will look at a drop area for files.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://www.philliphaydon.com/2014/04/28/leveling-up-your-logging/</guid><link>http://www.philliphaydon.com/2014/04/28/leveling-up-your-logging/</link><a10:author><a10:name>Pure Krome</a10:name></a10:author><category>Logging</category><title>Levelling up your logging. (part 2)</title><description>&lt;h2&gt;Part 2: Levelling up your Logging.&lt;/h2&gt;

&lt;p&gt;Make sure you've read Part 1: &lt;a href="http://www.philliphaydon.com/2014/04/if-youre-not-logging-youre-doing-it-all-wrong/"&gt;If you're not logging, you're doing it all wrong&lt;/a&gt; before you continue.&lt;/p&gt;

&lt;h3&gt;Production logging : This.Changes.Everything &amp;trade;&lt;/h3&gt;

&lt;p&gt;Localhost development is easy. Live/production logging is where This.Changes.Everything. &amp;trade;&lt;br /&gt;
Instead of sending all the logging information to your localhost Sentinal app we now send it to LogEntries.&lt;/p&gt;

&lt;p&gt;Why LogEntries (or any other Logging Service as a Service)?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can access this information any time.&lt;/li&gt;
&lt;li&gt;You local computer cannot be online 24/7&lt;/li&gt;
&lt;li&gt;When you need to triage a problem, the problem as already occured. Therefore, the problem is already &lt;em&gt;historical&lt;/em&gt;. As such, you can't suddenly turn 'on' logging. You need to go back into time and look at what has already happened.&lt;/li&gt;
&lt;/ol&gt;

</description><pubDate>Sun, 27 Apr 2014 16:00:00 Z</pubDate><a10:updated>2014-04-27T16:00:00Z</a10:updated><a10:content type="html">&lt;h2&gt;Part 2: Levelling up your Logging.&lt;/h2&gt;

&lt;p&gt;Make sure you've read Part 1: &lt;a href="http://www.philliphaydon.com/2014/04/if-youre-not-logging-youre-doing-it-all-wrong/"&gt;If you're not logging, you're doing it all wrong&lt;/a&gt; before you continue.&lt;/p&gt;

&lt;h3&gt;Production logging : This.Changes.Everything &amp;trade;&lt;/h3&gt;

&lt;p&gt;Localhost development is easy. Live/production logging is where This.Changes.Everything. &amp;trade;&lt;br /&gt;
Instead of sending all the logging information to your localhost Sentinal app we now send it to LogEntries.&lt;/p&gt;

&lt;p&gt;Why LogEntries (or any other Logging Service as a Service)?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can access this information any time.&lt;/li&gt;
&lt;li&gt;You local computer cannot be online 24/7&lt;/li&gt;
&lt;li&gt;When you need to triage a problem, the problem as already occured. Therefore, the problem is already &lt;em&gt;historical&lt;/em&gt;. As such, you can't suddenly turn 'on' logging. You need to go back into time and look at what has already happened.&lt;/li&gt;
&lt;/ol&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;These Logging SAAS products are perfect for this situation. They just keep storing logging data as it streams in. You can just ignore all the data ... until it's time to check on things :)&lt;/p&gt;

&lt;p&gt;The general idea is this&lt;/p&gt;

&lt;p&gt;Step 1. Create an account with &lt;a href="https://logentries.com/"&gt;LogEntries&lt;/a&gt;. Create a new &lt;em&gt;host&lt;/em&gt;. Get the 'token' text key. (It's a guid).&lt;/p&gt;

&lt;p&gt;Step 2. Install the log entries nuget package: &lt;code&gt;install-package SimpleLogging.LogEntries.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/leveling-up-logging-01.png" alt="weeeeee" /&gt;&lt;/p&gt;

&lt;p&gt;Step 3. &lt;code&gt;Add-&amp;gt;new-&amp;gt;nlog.release.config&lt;/code&gt;&lt;br /&gt;
&lt;em&gt;Note 1:&lt;/em&gt; Notice how we now have a new &lt;code&gt;extensions&lt;/code&gt; element? Need-dat.&lt;br /&gt;
&lt;em&gt;Note 2:&lt;/em&gt; Notice how we are now using a &lt;code&gt;logentries&lt;/code&gt; target type? Also need-dat.    &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="utf-8" ?&amp;gt;
&amp;lt;nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="true"&amp;gt;

    &amp;lt;extensions&amp;gt;
        &amp;lt;add assembly="LogentriesNLog"/&amp;gt;
    &amp;lt;/extensions&amp;gt;

    &amp;lt;!-- NLog example: https://github.com/nlog/nlog/wiki/Examples --&amp;gt;
    &amp;lt;targets&amp;gt;
        &amp;lt;target name="logentries" type="Logentries"
                debug="false"
                httpPut="false"
                ssl="false"
                layout="${date:format=ddd MMM dd} ${time:format=HH:mm:ss} ${date:format=zzz yyyy} ${logger} : ${LEVEL}, ${message}" /&amp;gt;
    &amp;lt;/targets&amp;gt;

    &amp;lt;rules&amp;gt;
        &amp;lt;logger name="*" minlevel="Trace" appendTo="logentries"/&amp;gt;
    &amp;lt;/rules&amp;gt;

&amp;lt;/nlog&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step 4. Modify &lt;code&gt;web.release.config&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Change this...&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;nlog configSource="NLog.config" /&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;to this...&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;nlog configSource="NLog.release.config" /&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Step 5. Run the website.&lt;/p&gt;

&lt;p&gt;Step 6. Now jump over to LogEntries and start a LIVE TAIL of the host... and viola... data should be streaming in.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/leveling-up-logging-02.png" alt="OMG IT WORKS!!!!111!!111" /&gt;&lt;/p&gt;

&lt;p&gt;Recap.&lt;/p&gt;

&lt;p&gt;We've got logging messages sprinkled through our code already. When we're happy, we push our latest code up to our website (ie. &lt;code&gt;RELEASE&lt;/code&gt; build so the web config transformations do their magic) and now the logging messages are logged to LogEntries instead. So at any time, we can log into LogEntries and see what's happening to our site.&lt;/p&gt;

&lt;h2&gt;Bonus Level&lt;/h2&gt;

&lt;p&gt;There's still more we can do. If you don't want to install Sentinal (or you're in some super fail restrictive environment where you are not allowed to install anything) you can always send any localhost debugging messages to LogEntries. Just create a second LogEntires-host called Debug or whatever and use that host for localhost development.&lt;/p&gt;

&lt;p&gt;Alternatively, you can also use Sentinal for production/live because you don't want to have any logging information stored on a 3rd party service. Just make sure you setup your Firewall to Port Forward any nLog data to the computer where Sentinal is running. This is what i &lt;em&gt;used&lt;/em&gt; to do until I found out about LogEntries.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://www.philliphaydon.com/2014/04/26/fixing-osx-for-a-windows-user/</guid><link>http://www.philliphaydon.com/2014/04/26/fixing-osx-for-a-windows-user/</link><a10:author><a10:name /></a10:author><category>OSX</category><category>Windows</category><title>Fixing OSX as a Windows User...</title><description>&lt;p&gt;I'm slowly in the process of moving away from my huge desktop computer and moving to my good old 15" Mac Book Pro w/ Retina, as my main computer. Running windows in parallels. But moving to OSX is really hard, things that I take for granted in Windows are just hard in OSX, even after 2 years of having this laptop, and having used OSX for a few years when I lived in New Zealand....&lt;/p&gt;

&lt;p&gt;Sooo I'm making this blog post, mostly as a reference for the future, on what I've done to make life a little easier. &lt;/p&gt;

&lt;h3&gt;Fixing Home / End keys&lt;/h3&gt;

&lt;p&gt;Ahhh I know you can use &lt;kbd&gt;cmd&lt;/kbd&gt; + &lt;kbd&gt;&amp;rarr;&lt;/kbd&gt; and &lt;kbd&gt;cmd&lt;/kbd&gt; + &lt;kbd&gt;&amp;larr;&lt;/kbd&gt;, but I just prefer the Windows key mapping. &lt;/p&gt;

</description><pubDate>Fri, 25 Apr 2014 16:00:00 Z</pubDate><a10:updated>2014-04-25T16:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;I'm slowly in the process of moving away from my huge desktop computer and moving to my good old 15" Mac Book Pro w/ Retina, as my main computer. Running windows in parallels. But moving to OSX is really hard, things that I take for granted in Windows are just hard in OSX, even after 2 years of having this laptop, and having used OSX for a few years when I lived in New Zealand....&lt;/p&gt;

&lt;p&gt;Sooo I'm making this blog post, mostly as a reference for the future, on what I've done to make life a little easier. &lt;/p&gt;

&lt;h3&gt;Fixing Home / End keys&lt;/h3&gt;

&lt;p&gt;Ahhh I know you can use &lt;kbd&gt;cmd&lt;/kbd&gt; + &lt;kbd&gt;&amp;rarr;&lt;/kbd&gt; and &lt;kbd&gt;cmd&lt;/kbd&gt; + &lt;kbd&gt;&amp;larr;&lt;/kbd&gt;, but I just prefer the Windows key mapping. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;I found &lt;a href="http://mwholt.blogspot.sg/2012/09/fix-home-and-end-keys-on-mac-os-x.html"&gt;this blog post&lt;/a&gt; by &lt;a href="https://twitter.com/mholt6"&gt;Matthew Holt&lt;/a&gt; which fixes the problem for me! &lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Copying without permission from Matthew Holt's blog, just incase it dies one day...)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Open the Terminal and do this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/Library
$ mkdir KeyBindings
$ cd KeyBindings
$ nano DefaultKeyBinding.dict
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Put these lines in that file, including the curly braces:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
/* Remap Home / End keys to be correct */
"\UF729" = "moveToBeginningOfLine:"; /* Home */
"\UF72B" = "moveToEndOfLine:"; /* End */
"$\UF729" = "moveToBeginningOfLineAndModifySelection:"; /* Shift + Home */
"$\UF72B" = "moveToEndOfLineAndModifySelection:"; /* Shift + End */
"^\UF729" = "moveToBeginningOfDocument:"; /* Ctrl + Home */
"^\UF72B" = "moveToEndOfDocument:"; /* Ctrl + End */
"$^\UF729" = "moveToBeginningOfDocumentAndModifySelection:"; /* Shift + Ctrl + Home */
"$^\UF72B" = "moveToEndOfDocumentAndModifySelection:"; /* Shift + Ctrl + End */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press Ctrl+O and then Enter to save the file, and Ctrl+X to exit. Restart your computer to have it take full effect.&lt;/p&gt;

&lt;p&gt;Cited Sources:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="http://evansweb.info/2005/03/24/mac-os-x-and-home-end-keys"&gt;http://evansweb.info/2005/03/24/mac-os-x-and-home-end-keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://soodev.wordpress.com/2011/07/04/mac-os-x-remapping-home-and-end-keys/"&gt;http://soodev.wordpress.com/2011/07/04/mac-os-x-remapping-home-and-end-keys/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Fixing Alt Tab...&lt;/h3&gt;

&lt;p&gt;I have no idea what the person was thinking when they decided that this was a good idea. &lt;/p&gt;

&lt;p&gt;So you can use &lt;kbd&gt;cmd&lt;/kbd&gt; + &lt;kbd&gt;tab&lt;/kbd&gt; to tab applications... but if you want to tab instances?!? You need to use &lt;kbd&gt;cmd&lt;/kbd&gt; + &lt;kbd&gt;`&lt;/kbd&gt;... So to fix that... Enter &lt;a href="http://manytricks.com/witch/"&gt;Witch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/fixing-osx-03.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;This thing is great, back to the old &lt;kbd&gt;alt/opt&lt;/kbd&gt; + &lt;kbd&gt;tab&lt;/kbd&gt; &lt;/p&gt;

&lt;h3&gt;Fixing Spotlight&lt;/h3&gt;

&lt;p&gt;I don't know how anyone... This is my Spotlight:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/fixing-osx-01.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Besides pretty much always saying 'indexing' when it does actually 'index'... it's really slow, doesn't give me what I'm looking for, and doesn't seem very helpful.&lt;/p&gt;

&lt;p&gt;Windows 8.1 Search is actually far superior to Spotlight. &lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.philliphaydon.com/images/fixing-osx-02.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Enter &lt;a href="http://www.alfredapp.com"&gt;Alfred&lt;/a&gt;... This thing is awesome, from the moment you install it, open it with &lt;kbd&gt;alt/opt&lt;/kbd&gt; + &lt;kbd&gt;space&lt;/kbd&gt;, and run your first start, it gives you the results you want.&lt;/p&gt;

&lt;h3&gt;Fixing maximize windows&lt;/h3&gt;

&lt;p&gt;I like to use windows Maximized, but when you press the little green &lt;code&gt;+&lt;/code&gt; for some reason it only expands the window vertically... I have no idea why...&lt;/p&gt;

&lt;p&gt;Spaces on OSX are pretty awesome, so if I want to have a couple of programs on 2 or 3 spaces I can easily flick between them with &lt;kbd&gt;ctrl&lt;/kbd&gt; + &lt;kbd&gt;&amp;larr;&lt;/kbd&gt; or view all with &lt;kbd&gt;ctrl&lt;/kbd&gt; + &lt;kbd&gt;&amp;uarr;&lt;/kbd&gt;, but when it comes to maximizing a window... while keeping the top tool bar, it seems you can't...&lt;/p&gt;

&lt;p&gt;I always get the argument that I should full screen the app, but I don't want to... &lt;/p&gt;

&lt;p&gt;Enter &lt;a href="http://www.blazingtools.com/right_zoom_mac.html"&gt;RightZoom&lt;/a&gt;, this thing is great, it makes a window take up all the space, both horizontally and vertically. &lt;/p&gt;

&lt;h3&gt;Things I can't fix :(&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Right click context menu to add new file...&lt;/li&gt;
&lt;li&gt;Cut/Paste folders easily (apparently there's some command but I never remember it)&lt;/li&gt;
&lt;/ol&gt;
</a10:content></item></channel></rss>